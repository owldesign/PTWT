@charset "UTF-8";
@import url(http://fonts.googleapis.com/css?family=Open+Sans:400,700,800);
@import url(http://fonts.googleapis.com/css?family=Muli:300,400);
.site-inner:after { content: ""; display: table; clear: both; }

.site-inner { -webkit-box-sizing: border-box; -moz-box-sizing: border-box; box-sizing: border-box; }

#theTable, #detail-container.detail-inner, #detail-container .template-slider, #detail-container .template-slider .swiper-slide, #detail-container .info { display: inline-block; min-height: 1px; -webkit-box-sizing: border-box; -moz-box-sizing: border-box; box-sizing: border-box; }

/** Map set  @param 	Map 	$map 		The map to use @param 	String 	$key 		The key to update @param 	Mixed 	$value 		The new value @return 	Map 			The new map */
/** Get the column width in percent for the global or a specific context  @param 	int 		$columns 					The number of columns to calculate @param 	int 		$context : $gridle-columns-count 	 	The context to use @return 	percentage 							The width in percent */
/** Get a state map  @param 	string 		$name 		The name of the state to get @return 	map 				A state map object */
/** Check if a state exist :  @param 	string 		$name 		The name of the state to check @return 	Boolean 			true is exist */
/** Get the media queries variables :  @param 	int 		$index 	 	The media query indes @param 	String 		$var 		The media query variable name @return 	String|int 			The variable value */
/** Get a variable  @param 	String 		$varName 				The variable name @param  	String 		$stateMap-or-stateName 	 	The state name or a map state value @return 	Mixed 							The finded value */
/** Set a variable in a state @param 	Mixed $stateName-or-stateIndex 	The state name of state index @param  	String $var                    		Variable name to assign @param  	Mixed $newValue          		The new value to assign @return 	List                         			The states list (full) */
/** Generate a column  @param 	String 		$name 			The column name (often count) @param 	int 		$columns 		The column count that the column will take @param 	int 		$context 		The context on witch the with will be calculed @param 	Boolean 	$generateClasses 	Set if the column has to be generated in css */
/** Generate classname  @param 	List 		$parrern 	The pattern to use to generate classname @param 	String 		$state 		The state @param 	int 		$count 		The column count */
/** Get the media query for a particular state, or with, etc...  @param 	Mixed 		$state-or-min-width 		The state name of the min with @param 	Mixed 		$max-width 			The max width if first param is a min width @return 	String 						The media query string without the @media */
/** Get states count  @return 	int 	The number of states defined */
/** Setup */
/** Register a clear each class */
/** Register a special class */
/** Register default states */
/** Register default mobile first states : */
/** Set the debug device (not used for now)  @param 	String 		$state 		The state to update @para m 	String 		$device 	The device to use (iphone, etc...) */
/** Parent clear each */
/** Vertical align : */
/** Show inline  @param 	String 		$state 		The state name */
/** Generate a custom class for all the states  @param 	list 	$pattern 		The name pattern of the class @param 	list 	$statesNames 		The states names to generate */
/* ★★★★★★★★★★★★★★★★★★★★★★★★★★★★ */
/* ★ Typography                 */
/* ★★★★★★★★★★★★★★★★★★★★★★★★★★★★ */
.heading { color: #1f1f1f; }
.heading.h-01 { font-family: "Open Sans", sans-serif; font-size: 32px; font-weight: 700; line-height: 1; }
.heading.h-02 { font-family: "Muli", sans-serif; font-size: 14px; font-weight: 400; line-height: 1; text-transform: uppercase; }
.heading.h-03 { font-family: "Muli", sans-serif; font-size: 14px; font-weight: 400; line-height: 1; }
.heading.h-05 { font-family: "Muli", sans-serif; font-size: 10px; font-weight: 400; line-height: 1; }

.copy-01 { font-family: "Muli", sans-serif; font-size: 12px; line-height: 18px; }

.copy-02 { font-family: "Muli", sans-serif; font-size: 12px; line-height: 22px; }

.copy-03 { font-family: "Muli", sans-serif; font-size: 11px; line-height: 1; }

a { text-decoration: none; }

.site-inner { position: relative; max-width: 60em; margin: 0 auto; }

input { padding: 15px; border: none; color: #626262; background: #efefef; box-shadow: inset 1px 1px 0px #e2e2e2, 1px 1px 0px white; outline: none; width: 100%; -webkit-box-sizing: border-box; -moz-box-sizing: border-box; box-sizing: border-box; -webkit-appearance: none; -moz-appearance: none; -ms-appearance: none; -o-appearance: none; appearance: none; -webkit-transition: background 0.4s ease; -moz-transition: background 0.4s ease; transition: background 0.4s ease; }
input::-webkit-input-placeholder { color: #626262; }
input::-moz-placeholder { color: #626262; }
input:-moz-placeholder { color: #626262; }
input:-ms-input-placeholder { color: #626262; }
input:focus { background: #f7f7f7; }

button { border: none; outline: none; background: #53d6cc; cursor: pointer; color: white; text-transform: uppercase; letter-spacing: .1em; font-weight: 400; font-size: 12px; -webkit-appearance: none; -moz-appearance: none; -ms-appearance: none; -o-appearance: none; appearance: none; }

.form-result { padding: 15px 0; }

.button { display: inline-block; color: white; letter-spacing: .1em; font-family: "Open Sans", sans-serif; font-weight: 400; font-size: 12px; text-align: center; text-transform: uppercase; padding: 20px 35px; -webkit-transition: all 0.3s ease; -moz-transition: all 0.3s ease; transition: all 0.3s ease; }
.button.rounded { border-radius: 3px; }
.button:hover { opacity: 0.7; -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=” $value * 100 “)"; filter: alpha(opacity=70); zoom: 1; }
.button.view-btn, .button.download-btn, .button.documentation-btn { display: block; font-size: 14px; background: #53d6cc; margin: 10px 0; }
.button.view-on-github { display: block; padding: 0; margin-top: 10px; color: #626262; text-transform: capitalize; font-size: 12px; }
.button.view-on-github:before { font-size: 22px; position: relative; top: 5px; margin-right: 5px; }

.hero-pagination, .detail-pagination { padding-bottom: 15px; text-align: center; }
.hero-pagination:after, .detail-pagination:after { content: ""; display: table; clear: both; }
.hero-pagination .swiper-pagination-switch, .detail-pagination .swiper-pagination-switch { position: relative; display: inline-block; border: 2px solid white; margin: 0 5px; height: 8px; width: 8px; border-radius: 180px; background: #e5e7e9; -webkit-transition: all 0.3s ease; -moz-transition: all 0.3s ease; transition: all 0.3s ease; }
.hero-pagination .swiper-pagination-switch.swiper-active-switch, .detail-pagination .swiper-pagination-switch.swiper-active-switch { background: #c9ced2; }
.hero-pagination .swiper-pagination-switch:hover, .detail-pagination .swiper-pagination-switch:hover { background: #c9ced2; }

.pager-btn { display: inline-block; background: #53d6cc; border: none; color: white; cursor: pointer; outline: none; height: 25px; -webkit-appearance: none; -moz-appearance: none; -ms-appearance: none; -o-appearance: none; appearance: none; -webkit-transition: all 0.3s ease; -moz-transition: all 0.3s ease; transition: all 0.3s ease; }
.pager-btn:hover { opacity: 0.7; -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=” $value * 100 “)"; filter: alpha(opacity=70); zoom: 1; }
.pager-btn.disabled { cursor: default; opacity: 0.4; -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=” $value * 100 “)"; filter: alpha(opacity=40); zoom: 1; }
@media screen and (max-width: 460px) { .pager-btn { float: left; width: 50%; font-size: 12px; } }

.table-page header { position: absolute; left: 140px; top: 70px; width: 50%; -webkit-transition: all 0.4s ease-out; -moz-transition: all 0.4s ease-out; transition: all 0.4s ease-out; }
.table-page header h1 { text-transform: uppercase; font-size: 28px !important; }
.table-page header h1 span { display: block; font-weight: 800; font-size: 38px !important; }
.table-page header .copy-01 { color: #626262; margin: 20px 0 0 0; font-family: "Open Sans", sans-serif; font-weight: 400; }
.table-page header h2 { font-family: "Open Sans", sans-serif; font-weight: 700; font-size: 14px; }
.table-page header h2 span { font-weight: 800; }
.table-page header figure:after { content: ""; display: table; clear: both; }
.table-page header figure img { display: block; float: left; margin-right: 20px; width: 110px; }
.table-page header figure figcaption { padding-top: 25px; }
@media screen and (min-width: 742px) and (max-width: 1024px) { .table-page header { width: 100%; position: relative; top: auto; right: auto; bottom: auto; left: auto; margin: 30px auto; }
  .table-page header .logo { text-align: center; }
  .table-page header .logo img { float: none; margin: 0 auto 10px auto; } }
@media screen and (min-width: 320px) and (max-width: 742px) { .table-page header { width: 100%; position: relative; top: auto; right: auto; bottom: auto; left: auto; margin: 30px auto; }
  .table-page header .logo { text-align: center; }
  .table-page header .logo img { float: none; margin: 0 auto 10px auto; }
  .table-page header .logo figcaption { padding: 0; }
  .table-page header .logo figcaption h1 { font-size: 24px !important; }
  .table-page header .logo figcaption h1 span { font-size: 32px !important; } }
@media screen and (max-width: 460px) { .table-page header { width: 100%; }
  .table-page header .logo { text-align: center; }
  .table-page header .logo img { float: none; margin: 0 auto 10px auto; } }

#theTable { position: relative; margin: 30px auto; float: left; direction: ltr; padding-left: 10px; padding-right: 10px; width: 100%; padding-left: 0; padding-right: 0; }
@media screen and (max-width: 460px) { #theTable { float: left; direction: ltr; padding-left: 10px; padding-right: 10px; } }
@media screen and (min-width: 320px) and (max-width: 742px) { #theTable { float: left; direction: ltr; padding-left: 10px; padding-right: 10px; } }
@media screen and (min-width: 742px) and (max-width: 1024px) { #theTable { float: left; direction: ltr; padding-left: 10px; padding-right: 10px; } }
#theTable .elements:after { content: ""; display: table; clear: both; }
#theTable .elements > div { position: relative; display: inline; float: left; margin-left: 0px; margin-right: 0px; height: 65px; width: 53px; background: #f2f2f2; border: 1px solid white; -webkit-box-sizing: border-box; -moz-box-sizing: border-box; box-sizing: border-box; opacity: 0.5; -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=” $value * 100 “)"; filter: alpha(opacity=50); zoom: 1; }
#theTable .elements > div .element-symbol, #theTable .elements > div .element-name, #theTable .elements > div .atomic-number { opacity: 0.3; -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=” $value * 100 “)"; filter: alpha(opacity=30); zoom: 1; }
#theTable .elements > div.available { cursor: pointer; opacity: 1; -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=” $value * 100 “)"; filter: alpha(opacity=100); zoom: 1; -webkit-transition: all 0.3s ease; -moz-transition: all 0.3s ease; transition: all 0.3s ease; }
#theTable .elements > div.available .element-symbol, #theTable .elements > div.available .element-name, #theTable .elements > div.available .atomic-number { opacity: 1; -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=” $value * 100 “)"; filter: alpha(opacity=100); zoom: 1; }
#theTable .elements > div.available:hover { border: none; background: #53d6cc; -webkit-transform: scale3d(1.5, 1.5, 1); -moz-transform: scale3d(1.5, 1.5, 1); -ms-transform: scale3d(1.5, 1.5, 1); -o-transform: scale3d(1.5, 1.5, 1); transform: scale3d(1.5, 1.5, 1); z-index: 50; }
#theTable .elements > div.available:hover span { color: white; }
#theTable .elements > div.available:hover:before, #theTable .elements > div.available:hover:after { display: none !important; }
#theTable .elements > div.available:hover:before { content: ""; background: #53d6cc; display: block; height: 100%; width: 100%; position: absolute; top: 0px; right: 0px; bottom: 0px; left: 0px; z-index: -1; }
#theTable .elements > div.available:hover:after { content: "HELLLO"; display: block; background: #d5f1b8; position: absolute; top: 5%; right: 0px; bottom: 0px; left: 0px; height: 90%; width: 100%; z-index: -2; -webkit-transform: translateX(0px); -moz-transform: translateX(0px); -ms-transform: translateX(0px); -o-transform: translateX(0px); transform: translateX(0px); -webkit-animation: moveRight 0.2s ease-out 1 forwards; -moz-animation: moveRight 0.2s ease-out 1 forwards; animation: moveRight 0.2s ease-out 1 forwards; -webkit-animation-delay: 0.2s; -moz-animation-delay: 0.2s; animation-delay: 0.2s; -webkit-pointer-events: none; -moz-pointer-events: none; pointer-events: none; }
#theTable .elements > div.empty { opacity: 0; -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=” $value * 100 “)"; filter: alpha(opacity=0); zoom: 1; }
#theTable .element { text-align: center; }
#theTable .element span { display: block; }
#theTable .element .element-name { font-family: Verdana, sans-serif; font-size: 8px; color: #626262; padding: 10px 0 5px 0; }
#theTable .element .atomic-number { font-weight: bold; font-size: 10px; padding: 0 0 3px 0; }
#theTable .element .element-symbol { font-family: "Open Sans", sans-serif; font-size: 20px; font-weight: 800; color: #2f2f2f; }
#theTable .row:after { content: ""; display: table; clear: both; }
#theTable .row.push { margin-top: 30px; }
@media screen and (min-width: 742px) and (max-width: 1024px) { #theTable { margin-top: 0; }
  #theTable .elements { font-size: 0; text-align: center; }
  #theTable .elements > div { display: inline-block; float: none !important; }
  #theTable .empty { display: none !important; } }
@media screen and (min-width: 320px) and (max-width: 742px) { #theTable { margin-top: 0; }
  #theTable .elements { font-size: 0; text-align: center; }
  #theTable .elements > div { display: inline-block; float: none !important; }
  #theTable .empty { display: none !important; } }

.white-popup { position: relative; width: auto; margin: 40px auto 0 auto; }

#detail-container { padding: 0 !important; }
#detail-container.detail-inner { float: left; direction: ltr; padding-left: 10px; padding-right: 10px; width: 100%; padding: 0 !important; }
@media screen and (max-width: 460px) { #detail-container.detail-inner { float: left; direction: ltr; padding-left: 10px; padding-right: 10px; } }
@media screen and (min-width: 320px) and (max-width: 742px) { #detail-container.detail-inner { float: left; direction: ltr; padding-left: 10px; padding-right: 10px; } }
@media screen and (min-width: 742px) and (max-width: 1024px) { #detail-container.detail-inner { float: left; direction: ltr; padding-left: 10px; padding-right: 10px; } }
#detail-container .template-slider { opacity: 0; -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=” $value * 100 “)"; filter: alpha(opacity=0); zoom: 1; }
#detail-container .template-slider:after { content: ""; display: table; clear: both; }
#detail-container .template-slider img { max-width: 100%; }
#detail-container .close-modal { position: fixed; top: 0; right: 0; margin: 0; height: 40px; width: 100%; }
#detail-container .template-slider, #detail-container .template-slider .swiper-slide { float: left; direction: ltr; padding-left: 10px; padding-right: 10px; width: 100%; padding: 0 !important; height: 400px; background-size: cover; }
@media screen and (max-width: 460px) { #detail-container .template-slider, #detail-container .template-slider .swiper-slide { float: left; direction: ltr; padding-left: 10px; padding-right: 10px; } }
@media screen and (min-width: 320px) and (max-width: 742px) { #detail-container .template-slider, #detail-container .template-slider .swiper-slide { float: left; direction: ltr; padding-left: 10px; padding-right: 10px; } }
@media screen and (min-width: 742px) and (max-width: 1024px) { #detail-container .template-slider, #detail-container .template-slider .swiper-slide { float: left; direction: ltr; padding-left: 10px; padding-right: 10px; } }
#detail-container .template-slider { height: 440px; }
#detail-container .info { float: left; direction: ltr; padding-left: 10px; padding-right: 10px; width: 50%; float: left; direction: ltr; padding-left: 10px; padding-right: 10px; display: block !important; float: none !important; margin-left: auto !important; margin-right: auto !important; clear: both !important; }
#detail-container .info h1 { margin-bottom: 10px; }
#detail-container .info .view-on-github { padding-top: 15px; }
@media screen and (max-width: 460px) { #detail-container .info { float: left; direction: ltr; padding-left: 10px; padding-right: 10px; } }
@media screen and (min-width: 320px) and (max-width: 742px) { #detail-container .info { float: left; direction: ltr; padding-left: 10px; padding-right: 10px; } }
@media screen and (min-width: 742px) and (max-width: 1024px) { #detail-container .info { float: left; direction: ltr; padding-left: 10px; padding-right: 10px; } }
@media screen and (max-width: 460px) { #detail-container .info { float: left; direction: ltr; padding-left: 10px; padding-right: 10px; } }
@media screen and (min-width: 320px) and (max-width: 742px) { #detail-container .info { float: left; direction: ltr; padding-left: 10px; padding-right: 10px; } }
@media screen and (min-width: 742px) and (max-width: 1024px) { #detail-container .info { float: left; direction: ltr; padding-left: 10px; padding-right: 10px; } }
@media screen and (min-width: 320px) and (max-width: 742px) { #detail-container .info { width: 100%; } }
@media screen and (min-width: 320px) and (max-width: 742px) { #detail-container .template-slider { float: none; padding-left: 0; padding-right: 0; } }
#detail-container .detail-pagination { margin: 15px 0; padding: 0; }
#detail-container .detail-pagination .swiper-pagination-switch { position: relative; cursor: pointer; border: 1px solid #e5e7e9; }
#detail-container .detail-pagination .swiper-pagination-switch:before { content: ""; display: block; height: 110%; width: 110%; border: 2px solid #f3f4f5; border-radius: 180px; position: absolute; top: -2px; right: 0px; bottom: 0px; left: -2px; }
#detail-container .detail-pagination .swiper-pagination-switch.swiper-active-switch { background: #53d6cc; }

@-webkit-keyframes moveRight { 0% { -webkit-transform: translateX(0); }
  100% { -webkit-transform: translateX(40px); } }
@-moz-keyframes moveRight { 0% { -moz-transform: translateX(0); }
  100% { -moz-transform: translateX(40px); } }
@keyframes moveRight { 0% { -webkit-transform: translateX(0); -moz-transform: translateX(0); -ms-transform: translateX(0); -o-transform: translateX(0); transform: translateX(0); }
  100% { -webkit-transform: translateX(40px); -moz-transform: translateX(40px); -ms-transform: translateX(40px); -o-transform: translateX(40px); transform: translateX(40px); } }
